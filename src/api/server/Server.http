@Server_HostAddress = https://localhost:7000

### ===== AUTH API DOCUMENTATION =====
# 
# 🚀 Production-Ready Authentication System
# Built with .NET 9, JWT, MERNİS Integration, and Advanced Security
#
# 📁 API ENDPOINT FILES (Role-Based Organization):
# 
# 📖 public.http         - Public endpoints (registration, login, password reset)
# 👤 base_user.http      - Regular user endpoints (profile, verification)  
# 👑 admin.http          - Admin endpoints (user management, roles)
#
# Usage: Open the appropriate file based on your role and testing needs

### ===== QUICK START =====

### Health Check
GET {{Server_HostAddress}}/api/v1/auth/test

### Default Admin Login (copy token for admin.http)
POST {{Server_HostAddress}}/api/v1/auth/login
Content-Type: application/json

{
  "email": "admin@system.com",
  "password": "Admin123!"
}

### ===== SYSTEM OVERVIEW =====
#
# 🔐 SECURITY FEATURES:
# ✅ JWT Authentication with role-based authorization
# ✅ MERNİS identity verification (Turkish government integration)
# ✅ Production-grade password reset with secure tokens
# ✅ Rate limiting and account security measures
# ✅ Input validation and SQL injection prevention
# ✅ Password strength validation
# ✅ TCKN and username format validation
# ✅ Separate endpoints for sensitive updates (email/phone)
# ✅ Email enumeration protection
# ✅ Single-use tokens with expiration
#
# 🎯 ROLE HIERARCHY:
# admin > customer_admin > customer_support > base_user
#
# 📋 AVAILABLE ROLES:
# - admin: Full system access
# - customer_admin: Customer organization admin  
# - customer_support: Customer support access
# - base_user: Standard user access
#
# 🗄️ DATABASE FEATURES:
# - PostgreSQL with Dapper ORM
# - Migration system (004_AddUsernameAndProfession.sql)
# - Soft delete support
# - Audit trails and logging
# - Distributed caching (Redis/Memory)
#
# 🌍 TURKISH FEATURES:
# - MERNİS TC Kimlik No doğrulama
# - Turkish phone number validation (05XXXXXXXXX)
# - TCKN algorithm validation
# - Turkish character support
#
# ⚙️ CONFIGURATION:
# - Environment-based settings
# - Configurable token expiration
# - Configurable rate limiting
# - Configurable MERNİS integration
# - Production/Development modes
#
# 📧 EMAIL & VERIFICATION:
# - Ready for email service integration
# - Phone SMS verification support
# - Email/phone verification codes
# - Password reset via email (console for development)
#
# 🔧 DEVELOPMENT SETUP:
# 1. Run database migrations: 004_AddUsernameAndProfession.sql
# 2. Configure appsettings.Development.json
# 3. Start the API server
# 4. Use public.http to register/login
# 5. Copy tokens to base_user.http or admin.http
# 6. Test role-specific endpoints
#
# 🚀 PRODUCTION CHECKLIST:
# ✅ Enable MERNİS verification (MernisVerification:Enabled = true)
# ✅ Configure real email service (replace console logging)
# ✅ Set up Redis for distributed caching
# ✅ Configure proper SSL certificates
# ✅ Remove bootstrap endpoint
# ✅ Set strong JWT secrets
# ✅ Configure rate limiting
# ✅ Set up monitoring and alerting
#
# 📞 SUPPORT:
# Default Admin: admin@system.com / Admin123!
# Database: PostgreSQL (localhost:5433)
# API Base URL: https://localhost:7000
# 
# Built with .NET 9 and modern security practices
